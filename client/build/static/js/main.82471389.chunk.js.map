{"version":3,"sources":["components/AllPets.js","components/OnePet.js","components/CreatePet.js","components/UpdatePet.js","App.js","reportWebVitals.js","index.js"],"names":["AllPets","props","useState","setAllPets","useEffect","axios","get","then","response","console","log","results","data","sort","a","b","nameA","pet_type","toUpperCase","nameB","catch","err","class","map","pet","i","scope","_id","pet_name","pet_description","to","OnePet","setOnePet","pet_skill_1","pet_skill_2","pet_skill_3","onClick","e","delete","navigate","CreatePet","PetInfo","setPetInfo","changeHandler","target","name","value","errors","setErrors","className","onSubmit","preventDefault","post","type","id","onChange","message","UpdatePet","put","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAoEeA,EA9DC,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBAChBF,EADgB,KACPG,EADO,KA+BvB,OA5BAC,qBAAU,WACNC,IAAMC,IAAI,sCACLC,MAAK,SAAAC,GACFC,QAAQC,IAAI,gEACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAI,gEACZ,IAAIC,EAAUH,EAASI,KAAKD,QAC5BA,EAAQE,MAAK,SAAUC,EAAGC,GACtB,IAAIC,EAAQF,EAAEG,SAASC,cACnBC,EAAQJ,EAAEE,SAASC,cACvB,OAAIF,EAAQG,GACA,EAERH,EAAQG,EACD,EAIJ,KAEXhB,EAAWQ,MAIdS,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,8BAA+BW,QAC9D,IAIC,8BACI,wBAAOC,MAAM,QAAb,UACI,gCACI,+BACI,2DACA,0CACA,0CACA,8CAGR,gCACKtB,EAAQuB,KAAI,SAACC,EAAKC,GACf,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAIG,MACrB,6BAAKH,EAAII,WACT,6BAAKJ,EAAIP,WACT,6BAAKO,EAAIK,kBACT,+BAAI,wBAAQP,MAAM,0BAAd,SAAwC,cAAC,IAAD,CAAMQ,GAAE,gBAAWN,EAAIG,KAAvB,uBAA5C,MAAoG,wBAAQL,MAAM,0BAAd,SAAwC,cAAC,IAAD,CAAMQ,GAAE,uBAAkBN,EAAIG,KAA9B,qCCE7JI,EAtDA,SAAC9B,GAAW,IAAD,EAEMC,mBAAS,IAFf,mBAEf6B,EAFe,KAEPC,EAFO,KA8BtB,OAdA5B,qBAAU,WACNC,IAAMC,IAAN,yCAA4CL,EAAM0B,MAC7CpB,MAAK,SAAAC,GACFC,QAAQC,IAAI,gEACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAI,gEACZsB,EAAUxB,EAASI,KAAKD,YAE3BS,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,8BAA+BW,QAC9D,IAMC,gCACI,uBACA,iDAAoBU,EAAOH,YAC3B,uBACA,4CAAgBG,EAAOd,YACvB,uBACA,+CAAkBc,EAAOF,mBACzB,uBACA,6CACA,2CAAcE,EAAOE,YAArB,OACA,uBACA,2CAAcF,EAAOG,YAArB,OACA,uBACA,2CAAcH,EAAOI,YAArB,OAEA,wBAAQb,MAAM,0BAAd,kBAfJ,OAe6D,yBAAQA,MAAM,iBAAiBc,QA1C9E,SAACC,GACf5B,QAAQC,IAAI,qCACZL,IAAMiC,OAAN,gDAAsDrC,EAAM0B,MACvDpB,MAAK,SAAAC,GACFC,QAAQC,IAAI,8DACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAI,8DACZ6B,YAAS,QAEZnB,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,yBAA0BW,OAiCK,mBAA0DU,EAAOH,gB,cC6CvHY,EA3FG,WAAO,IAAD,EACUtC,mBAAS,CACnC0B,SAAU,GACVX,SAAU,GACVY,gBAAiB,GACjBI,YAAa,GACbC,YAAa,GACbC,YAAa,KAPG,mBACbM,EADa,KACJC,EADI,KAUdC,EAAgB,SAACN,GACnB5B,QAAQC,IAAI,8BACZgC,EAAW,2BACJD,GADG,kBAELJ,EAAEO,OAAOC,KAAOR,EAAEO,OAAOE,UAdd,EAkBQ5C,mBAAS,IAlBjB,mBAkBb6C,EAlBa,KAkBLC,EAlBK,KA0CpB,OACI,gCACI,uBACA,4DACA,uBACA,uBAAMC,UAAU,gBAAgBC,SAxBhB,SAACb,GACrBA,EAAEc,iBACF9C,IAAM+C,KAAN,yCAAoDX,GAC/ClC,MAAK,SAAAI,GACFF,QAAQC,KAAI,SAAAC,GAAO,MAAI,4BAA2BA,GAC9CA,EAAQC,KAAKmC,QACbtC,QAAQC,IAAI,mCACZsC,EAAUrC,EAAQC,KAAKmC,SAGvBR,YAAS,QAGhBnB,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,oBAAqBW,OAW/C,UACI,sBAAK4B,UAAU,aAAf,UACI,8CACA,uBAAOI,KAAK,OAAOR,KAAK,WAAWS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,IAC5E,mBAAGM,UAAU,cAAb,SAA4BF,EAAOnB,SAAUmB,EAAOnB,SAAS4B,QAAS,QAE1E,sBAAKP,UAAU,aAAf,UACI,8CACA,uBAAOI,KAAK,OAAOR,KAAK,WAAWS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,IAC5E,mBAAGM,UAAU,cAAb,SAA4BF,EAAO9B,SAAW8B,EAAO9B,SAASuC,QAAU,QAE5E,sBAAKP,UAAU,aAAf,UACI,qDACA,uBAAOI,KAAK,OAAOR,KAAK,kBAAkBS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,IACnF,mBAAGM,UAAU,cAAb,SAA4BF,EAAOlB,gBAAkBkB,EAAOlB,gBAAgB2B,QAAU,QAE1F,sBAAKP,UAAU,aAAf,UACI,wDACA,6CACA,uBAAOI,KAAK,OAAOR,KAAK,cAAcS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,IAC/E,mBAAGM,UAAU,cAAb,SAA4BF,EAAOd,YAAcc,EAAOd,YAAYuB,QAAU,QAElF,sBAAKP,UAAU,aAAf,UAEI,6CACA,uBAAOI,KAAK,OAAOR,KAAK,cAAcS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,IAC/E,mBAAGM,UAAU,cAAb,SAA4BF,EAAOb,YAAca,EAAOb,YAAYsB,QAAU,QAElF,sBAAKP,UAAU,aAAf,UACI,6CACA,uBAAOI,KAAK,OAAOR,KAAK,cAAcS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,IAC/E,mBAAGM,UAAU,cAAb,SAA4BF,EAAOZ,YAAcY,EAAOZ,YAAYqB,QAAU,QAKlF,uBAAOH,KAAK,SAASP,MAAM,UAAUG,UAAU,2BCYhDQ,EA9FG,SAACxD,GAAW,IAAD,EACKC,mBAAS,CACnC0B,SAAU,GACVX,SAAU,GACVY,gBAAiB,GACjBI,YAAa,GACbC,YAAa,GACbC,YAAa,KAPQ,mBAClBM,EADkB,KACTC,EADS,KAUzBtC,qBAAU,WACNC,IAAMC,IAAN,yCAA4CL,EAAM0B,MAC7CpB,MAAK,SAAAI,GACFF,QAAQC,IAAI,gEACZD,QAAQC,IAAIC,GACZF,QAAQC,IAAI,gEACZgC,EAAW/B,EAAQC,KAAKD,YAE3BS,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,8BAA+BW,QAC9D,CAACoB,EAAQd,MAEZ,IAAMgB,EAAgB,SAACN,GACnB5B,QAAQC,IAAI,8BACZgC,EAAW,2BACJD,GADG,kBAELJ,EAAEO,OAAOC,KAAOR,EAAEO,OAAOE,UAzBT,EA6BG5C,mBAAS,IA7BZ,mBA6BlB6C,EA7BkB,KA6BVC,EA7BU,KAiDzB,OACI,gCACI,uBACA,wCAAWP,EAAQb,YACnB,uBAAMqB,UAAU,gBAAgBC,SArBhB,SAACb,GACrBA,EAAEc,iBACF9C,IAAMqD,IAAN,gDAAmDzD,EAAM0B,KAAOc,GAC3DlC,MAAK,SAAAI,GACFF,QAAQC,KAAI,SAAAC,GAAO,MAAI,yBAAwBA,GAC3CA,EAAQC,KAAKmC,QACbtC,QAAQC,IAAI,mCACZsC,EAAUrC,EAAQC,KAAKmC,SAGvBR,YAAS,QAGhBnB,OAAM,SAAAC,GAAG,OAAIZ,QAAQC,IAAI,qBAAsBW,OAQhD,UACI,sBAAK4B,UAAU,aAAf,UACI,8CACA,uBAAOI,KAAK,OAAOR,KAAK,WAAWS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,EAAeG,MAAOL,EAAQb,WAC1G,mBAAGqB,UAAU,cAAb,SAA4BF,EAAOnB,SAAWmB,EAAOnB,SAAS4B,QAAU,QAE5E,sBAAKP,UAAU,aAAf,UACI,8CACA,uBAAOI,KAAK,OAAOR,KAAK,WAAWS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,EAAeG,MAAOL,EAAQxB,WAC1G,mBAAGgC,UAAU,cAAb,SAA4BF,EAAO9B,SAAW8B,EAAO9B,SAASuC,QAAU,QAE5E,sBAAKP,UAAU,aAAf,UACI,qDACA,uBAAOI,KAAK,OAAOR,KAAK,kBAAkBS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,EAAeG,MAAOL,EAAQZ,kBACjH,mBAAGoB,UAAU,cAAb,SAA4BF,EAAOlB,gBAAkBkB,EAAOlB,gBAAgB2B,QAAU,QAE1F,sBAAKP,UAAU,aAAf,UACI,wDACA,6CACA,uBAAOI,KAAK,OAAOR,KAAK,cAAcS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,EAAeG,MAAOL,EAAQR,cAC7G,mBAAGgB,UAAU,cAAb,SAA4BF,EAAOd,YAAcc,EAAOd,YAAYuB,QAAU,QAElF,sBAAKP,UAAU,aAAf,UACI,6CACA,uBAAOI,KAAK,OAAOR,KAAK,cAAcS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,EAAeG,MAAOL,EAAQP,cAC7G,mBAAGe,UAAU,cAAb,SAA4BF,EAAOb,YAAca,EAAOb,YAAYsB,QAAU,QAElF,sBAAKP,UAAU,aAAf,UACI,6CACA,uBAAOI,KAAK,OAAOR,KAAK,cAAcS,GAAG,GAAGL,UAAU,eAAeM,SAAUZ,EAAeG,MAAOL,EAAQN,cAC7G,mBAAGc,UAAU,cAAb,SAA4BF,EAAOZ,YAAcY,EAAOZ,YAAYqB,QAAU,QAGlF,uBAAOH,KAAK,SAASP,MAAM,WAAWG,UAAU,2BCjEjDU,MAnBf,WAIE,OACE,sBAAKV,UAAU,MAAf,UACE,6CACA,wBAAQ3B,MAAM,0BAAd,SAAyC,cAAC,IAAD,CAAMQ,GAAG,IAAT,oBAF3C,OAEgF,wBAAQR,MAAM,0BAAd,SAAyC,cAAC,IAAD,CAAMQ,GAAG,eAAT,wCACvH,uBACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAS8B,KAAK,MACd,cAAC,EAAD,CAAQA,KAAK,eACb,cAAC,EAAD,CAAWA,KAAK,sBAChB,cAAC,EAAD,CAAWA,KAAK,wBCRTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.82471389.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\n\r\nconst AllPets = (props) => {\r\n    const [AllPets, setAllPets] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pets/all\")\r\n            .then(response => {\r\n                console.log(\"/*/*MADE AXIOS.GET CALL TO RETRIEVE ALL PETS FROM SERVER/*/*\")\r\n                console.log(response)\r\n                console.log(\"/*/*MADE AXIOS.GET CALL TO RETRIEVE ALL PETS FROM SERVER/*/*\")\r\n                let results = response.data.results\r\n                results.sort(function (a, b) {\r\n                    var nameA = a.pet_type.toUpperCase(); // ignore upper and lowercase\r\n                    var nameB = b.pet_type.toUpperCase(); // ignore upper and lowercase\r\n                    if (nameA < nameB) {\r\n                        return -1;\r\n                    }\r\n                    if (nameA > nameB) {\r\n                        return 1;\r\n                    }\r\n\r\n                    // names must be equal\r\n                    return 0;\r\n                });\r\n                setAllPets(results)\r\n\r\n\r\n            })\r\n            .catch(err => console.log(\"errors retrieveing all Pets\", err))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Pet Identification Number</th>\r\n                        <th>Pet Name</th>\r\n                        <th>Pet Type</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {AllPets.map((pet, i) => {\r\n                        return (\r\n                            <tr>\r\n                                <th scope=\"row\">{pet._id}</th>\r\n                                <td>{pet.pet_name}</td>\r\n                                <td>{pet.pet_type }</td>\r\n                                <td>{pet.pet_description}</td>\r\n                                <td><button class=\"btn btn-outline-success\"><Link to={`/pets/${pet._id}`}>Details</Link></button> | <button class=\"btn btn-outline-success\"><Link to={`/pets/update/${pet._id}`}>Edit</Link></button></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default AllPets;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst OnePet = (props) => {\r\n\r\n    const [OnePet, setOnePet] = useState({})\r\n\r\n    const deletePet = (e) => {\r\n        console.log(\"/*/*TRYING TO DELETE A MARINE/*/*\")\r\n        axios.delete(`http://localhost:8000/api/pets/delete/${props._id}`)\r\n            .then(response => {\r\n                console.log(\"/*/*MADE AXIOS.DELETE CALL TO DELETE A PET FROM SERVER/*/*\")\r\n                console.log(response)\r\n                console.log(\"/*/*MADE AXIOS.DELETE CALL TO DELETE A PET FROM SERVER/*/*\")\r\n                navigate(\"/\")\r\n            })\r\n            .catch(err => console.log(\"errors Deleteing A Pet\", err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(response => {\r\n                console.log(\"/*/*MADE AXIOS.GET CALL TO RETRIEVE ALL PETS FROM SERVER/*/*\")\r\n                console.log(response)\r\n                console.log(\"/*/*MADE AXIOS.GET CALL TO RETRIEVE ALL PETS FROM SERVER/*/*\")\r\n                setOnePet(response.data.results)\r\n            })\r\n            .catch(err => console.log(\"errors retrieveing all pets\", err))\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <h3>Details About: {OnePet.pet_name }</h3>\r\n            <br />\r\n            <h4>Pet Type: { OnePet.pet_type}</h4>\r\n            <br />\r\n            <h4>Description: {OnePet.pet_description }</h4>\r\n            <br />\r\n            <h4>Pet Skills:</h4>\r\n            <h4>Skill 1: {OnePet.pet_skill_1} </h4>\r\n            <br/>\r\n            <h4>Skill 1: {OnePet.pet_skill_2} </h4>\r\n            <br/>\r\n            <h4>Skill 1: {OnePet.pet_skill_3} </h4>\r\n            \r\n            <button class=\"btn btn-outline-success\">Like</button> |  <button class=\"btn btn-danger\" onClick={deletePet}>Adopt {OnePet.pet_name}</button>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default OnePet;","import React, {useState} from 'react';\r\nimport {navigate} from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst CreatePet = () => {\r\n    const [PetInfo, setPetInfo] = useState({\r\n        pet_name: \"\",\r\n        pet_type: \"\",\r\n        pet_description: \"\",\r\n        pet_skill_1: \"\",\r\n        pet_skill_2: \"\",\r\n        pet_skill_3: \"\",\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        console.log(\"TRYING TO CHANGE FORM DATA\")\r\n        setPetInfo({\r\n            ...PetInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n\r\n\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.post(`http://localhost:8000/api/pets/create/`,PetInfo)\r\n            .then(results => {\r\n                console.log(results => \"*/*/ ADDING NEW PET*/*/\", results)\r\n                if (results.data.errors) {\r\n                    console.log(\"THERE WAS AN ERROR ADDING A PET\")\r\n                    setErrors(results.data.errors)\r\n                }\r\n                else {\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n            .catch(err => console.log(\" ERROR ADDING PET\", err))\r\n\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br/>\r\n            <h2>Know A Pet Needing A Home?</h2>\r\n            <br />\r\n            <form className=\"col-6 mx-auto\" onSubmit={onSubmitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Name:</label>\r\n                    <input type=\"text\" name=\"pet_name\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.pet_name? errors.pet_name.message: \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Type:</label>\r\n                    <input type=\"text\" name=\"pet_type\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.pet_type ? errors.pet_type.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Description:</label>\r\n                    <input type=\"text\" name=\"pet_description\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.pet_description ? errors.pet_description.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h6>Pet Skills: (Optional)</h6>\r\n                    <label>Skill 1:</label>\r\n                    <input type=\"text\" name=\"pet_skill_1\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.pet_skill_1 ? errors.pet_skill_1.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    \r\n                    <label>Skill 2:</label>\r\n                    <input type=\"text\" name=\"pet_skill_2\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.pet_skill_2 ? errors.pet_skill_2.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 3:</label>\r\n                    <input type=\"text\" name=\"pet_skill_3\" id=\"\" className=\"form-control\" onChange={changeHandler} />\r\n                    <p className=\"text-danger\">{errors.pet_skill_3 ? errors.pet_skill_3.message : \"\"}</p>\r\n                </div>\r\n\r\n\r\n\r\n                <input type=\"submit\" value=\"Add Pet\" className=\"btn btn-success\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default CreatePet;","import React, { useEffect, useState } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\n\r\nconst UpdatePet = (props) => {\r\n    const [PetInfo, setPetInfo] = useState({\r\n        pet_name: \"\",\r\n        pet_type: \"\",\r\n        pet_description: \"\",\r\n        pet_skill_1: \"\",\r\n        pet_skill_2: \"\",\r\n        pet_skill_3: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\r\n            .then(results => {\r\n                console.log(\"/*/*MADE AXIOS.GET CALL TO RETRIEVE ALL PETS FROM SERVER/*/*\")\r\n                console.log(results)\r\n                console.log(\"/*/*MADE AXIOS.GET CALL TO RETRIEVE ALL PETS FROM SERVER/*/*\")\r\n                setPetInfo(results.data.results)\r\n            })\r\n            .catch(err => console.log(\"errors retrieveing all Pets\", err))\r\n    }, [PetInfo._id])\r\n\r\n    const changeHandler = (e) => {\r\n        console.log(\"TRYING TO CHANGE FORM DATA\")\r\n        setPetInfo({\r\n            ...PetInfo,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:8000/api/pets/update/${props._id}`, PetInfo)\r\n            .then(results => {\r\n                console.log(results => \"*/*/ EDITING PET*/*/\", results)\r\n                if (results.data.errors) {\r\n                    console.log(\"THERE WAS AN ERROR ADDING A PET\")\r\n                    setErrors(results.data.errors)\r\n                }\r\n                else {\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n            .catch(err => console.log(\" ERROR EDITING PET\", err))    \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <h2>Edit: {PetInfo.pet_name}</h2>\r\n            <form className=\"col-6 mx-auto\" onSubmit={onSubmitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Name:</label>\r\n                    <input type=\"text\" name=\"pet_name\" id=\"\" className=\"form-control\" onChange={changeHandler} value={PetInfo.pet_name} />\r\n                    <p className=\"text-danger\">{errors.pet_name ? errors.pet_name.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Type:</label>\r\n                    <input type=\"text\" name=\"pet_type\" id=\"\" className=\"form-control\" onChange={changeHandler} value={PetInfo.pet_type} />\r\n                    <p className=\"text-danger\">{errors.pet_type ? errors.pet_type.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Pet Description:</label>\r\n                    <input type=\"text\" name=\"pet_description\" id=\"\" className=\"form-control\" onChange={changeHandler} value={PetInfo.pet_description}/>\r\n                    <p className=\"text-danger\">{errors.pet_description ? errors.pet_description.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h6>Pet Skills: (Optional)</h6>\r\n                    <label>Skill 1:</label>\r\n                    <input type=\"text\" name=\"pet_skill_1\" id=\"\" className=\"form-control\" onChange={changeHandler} value={PetInfo.pet_skill_1}/>\r\n                    <p className=\"text-danger\">{errors.pet_skill_1 ? errors.pet_skill_1.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 2:</label>\r\n                    <input type=\"text\" name=\"pet_skill_2\" id=\"\" className=\"form-control\" onChange={changeHandler} value={PetInfo.pet_skill_2}/>\r\n                    <p className=\"text-danger\">{errors.pet_skill_2 ? errors.pet_skill_2.message : \"\"}</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Skill 3:</label>\r\n                    <input type=\"text\" name=\"pet_skill_3\" id=\"\" className=\"form-control\" onChange={changeHandler} value={PetInfo.pet_skill_3}/>\r\n                    <p className=\"text-danger\">{errors.pet_skill_3 ? errors.pet_skill_3.message : \"\"}</p>\r\n                </div>\r\n                \r\n                <input type=\"submit\" value=\"Edit Pet\" className=\"btn btn-success\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default UpdatePet;","import { Router, Link } from '@reach/router';\nimport AllPets from './components/AllPets';\nimport OnePet from './components/OnePet';\nimport CreatePet from './components/CreatePet';\nimport UpdatePet from './components/UpdatePet';\n\n\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Pet Shelter</h1> \n      <button class=\"btn btn-outline-success\" ><Link to=\"/\">Home</Link></button> |  <button class=\"btn btn-outline-success\" ><Link to=\"/pets/create\">Add A Pet To The Shelter</Link></button>\n      <hr/>\n      <Router>\n        <AllPets path=\"/\"></AllPets>\n        <OnePet path=\"/pets/:_id\"></OnePet>\n        <UpdatePet path=\"/pets/update/:_id\"></UpdatePet>\n        <CreatePet path=\"/pets/create\"></CreatePet>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}